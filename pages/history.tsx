import Head from "next/head";
import AmahlubistStyle from "@/components/Home/AmahlubistStyle";
import ContactSection from "@/components/ContactSection";
import CompleteProfile from "@/components/Dashboard/CompleteProfile";
import Footer from "@/components/Footer";
// import Hero from "@/components/Home/Hero";
import Layout from "@/components/Layout";
import withAuth from "middleware/withAuth";
import { NextPageContext } from "next";
import { useEffect } from "react";
import { useRecoilValue, useSetRecoilState } from "recoil";
import { AuthAtom, isAuthenticatedSelector, User } from "recoilStore/AuthAtom";
import BreadcrumbNav from "@/components/BreadCrumb";
import Hero from "@/components/History/Hero";
import Article from "@/components/History/Article";
import Comment from "@/components/History/Comment";
import FeaturedStories from "@/components/History/FeaturedStories";

export default function History(props: any): JSX.Element {
  const setUser = useSetRecoilState(AuthAtom);
  const isAuthenticated = useRecoilValue(isAuthenticatedSelector);

  useEffect(() => {
    if (props.initialRecoilState?.user) {
      setUser({
        token: props?.initialRecoilState?.user?.token,
        ...props?.initialRecoilState?.user,
      });
    }
  }, [props.initialRecoilState?.user]);

  return (
    <div>
      <Head>
        <title>Welcome - </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {isAuthenticated && <CompleteProfile />}
      <Layout>
        <>
          <BreadcrumbNav href={''} />
          <Hero />
          <Article />
          <Comment />
          <FeaturedStories />
          <ContactSection />
          <Footer /> 
          {/* <Welcome />
          <TheAmahlubist />
          <BuildingAnILO />
          <AmahlubistStyle />
          
          */}
        </>
      </Layout>
    </div>
  );
}

export const getServerSideProps = withAuth(
  async (context: NextPageContext & { user: User }) => {
    let user = null;
    if (context.user) user = context.user;

    return {
      props: {
        initialRecoilState: { user },
      },
    };
  }
);
