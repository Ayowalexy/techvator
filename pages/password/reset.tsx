import { Box, Flex, Icon, Stack, useTheme } from "@chakra-ui/react";
import { AiOutlineCheckCircle } from "react-icons/ai";
import { SyntheticEvent, useState } from "react";
import Head from "next/head";
import { useFormik } from "formik";
import * as yup from "yup";
import FormInput from "@/components/Forms/FormInput";
import HeaderTag from "@/components/HeaderTag";
import Layout from "@/components/Layout";
import Wrapper from "@/components/Wrapper";
import { Btn } from "@/components/Button";
import { FaChevronRight } from "react-icons/fa";

function reset() {
  const theme = useTheme();
  const { black, white } = theme.colors.brand;
  const [passwordVisible, setPasswordVisible] = useState(false);

  const validationSchema = yup.object().shape({
    email: yup.string().trim().email().required("Email Address is required"),
    password: yup.string().trim().required("Password is required"),
  });

  const {
    handleSubmit,
    handleChange,
    handleBlur,
    isSubmitting,
    errors,
    touched,
  } = useFormik({
    initialValues: {
      email: "",
      password: "",
    },
    validationSchema,
    onSubmit: async (values, formikHelpers) => {
      console.log(values);
    },
  });

  const togglePasswordVisiblity = (e: SyntheticEvent) => {
    e.preventDefault();
    setPasswordVisible(!passwordVisible);
  };

  return (
    <div>
      <Head>
        <title>Create Account - Amahlubi </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <Wrapper>
          <Flex
            justifyContent="center"
            alignItems="center"
            flexDir="column"
            pos="relative"
            zIndex={1}
          >
            <HeaderTag mb="1.8rem" fontWeight="600" letterSpacing="unset">
              Recover password
            </HeaderTag>
            <Box
              bg="whiteAlpha.900"
              px="3.2rem"
              pt="5rem"
              pb="3rem"
              borderRadius="2xl"
              maxW="60.3rem"
              w="100%"
              mt="3rem"
            >
              <HeaderTag
                mt="unset"
                letterSpacing="unset"
                fontSize="1.7rem"
                mb="1.8rem"
                fontWeight="600"
                color="black"
              >
                Reset your password
              </HeaderTag>
              <form onSubmit={handleSubmit}>
                <Stack spacing="3.7rem">
                  <Flex alignItems="center">
                    <FormInput
                      // label="First Name"
                      containerProps={{
                        flexDir: "column",
                        // mr: ["0", "0", "0", "3.9rem"],
                      }}
                      labelProps={{
                        alignSelf: "flex-start",
                        borderRight: "unset",
                        fontSize: "1.1rem",
                        fontWeight: "800",
                      }}
                      inputProps={{
                        id: "email",
                        name: "email",
                        type: "email",
                        onChange: handleChange,
                        onBlur: handleBlur,
                        isInvalid: !!errors.email && touched.email,
                        borderRadius: "md",
                        border: `1px solid ${black} !important`,
                        p: "2.3rem",
                        color: black,
                        placeholder: "Email Address",
                        _placeholder: {
                          color: black,
                          fontWeight: "bold",
                        },
                      }}
                      formErrorMessage={errors.email}
                    />
                  </Flex>

                  <Flex justifyContent="center">
                    <Btn
                      isLoading={isSubmitting}
                      type="submit"
                      fontFamily="Roboto"
                      fontWeight="400"
                      borderRadius="lg"
                      fontSize="1.2rem"
                      maxW="20.6rem"
                      w="100%"
                      textAlign="center"
                      bgColor={black}
                      color={white}
                      border={black}
                      px="1.8rem"
                      py="1.5rem"
                      // _hover={{ backgroundColor: "black", opacity: ".7" }}
                      rightIcon={<Icon as={FaChevronRight} />}
                    >
                      Send me reset link
                    </Btn>
                  </Flex>
                </Stack>
              </form>

              <Flex alignItems="center" justifyContent="center" gap=".5rem">
                <Icon color={black} as={AiOutlineCheckCircle} mt=".8rem" />
                <HeaderTag
                  color={black}
                  letterSpacing="unset"
                  as="h3"
                  fontSize="1.4rem"
                  fontFamily="Montserrat"
                  mb="2rem"
                >
                  Password setup was successful
                </HeaderTag>
              </Flex>
            </Box>
          </Flex>
        </Wrapper>
      </Layout>
    </div>
  );
}

export default reset;
